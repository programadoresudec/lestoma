<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:prism="http://prismlibrary.com" xmlns:combobox="clr-namespace:Syncfusion.XForms.ComboBox;assembly=Syncfusion.SfComboBox.XForms" 
             xmlns:buttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms" 
             xmlns:inputLayout="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms" 
             xmlns:border="clr-namespace:Syncfusion.XForms.Border;assembly=Syncfusion.Core.XForms"
             xmlns:cards="clr-namespace:Syncfusion.XForms.Cards;assembly=Syncfusion.Cards.XForms" 
             xmlns:converter="clr-namespace:lestoma.App.Converters"
             prism:ViewModelLocator.AutowireViewModel="True" Title="{Binding Title}"
             x:Class="lestoma.App.Views.UpasActividades.CreateOrEditDetalleUpaActividadPage">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converter:BooleanToColorConverter x:Key="ColorConverter" />
            <converter:InverseBoolConverter x:Key="InverseBoolConverter" />
            <converter:NameValidationConverter x:Key="FirstValidationErrorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <StackLayout VerticalOptions="Start" HorizontalOptions="Start" Padding="30">
        <ScrollView>
            <StackLayout>
                <border:SfBorder BackgroundColor="{DynamicResource Gray-White}"
                                 BorderColor="{Binding Source={x:Reference usuarioEntry}, Path=IsFocused, 
                                 Converter={StaticResource ColorConverter}, ConverterParameter=0}"
                                 CornerRadius="4" HeightRequest="80" Style="{StaticResource LoginFormBorderlessEntryBorderStyle}">
                    <Grid ColumnDefinitions="*, Auto">
                        <inputLayout:SfTextInputLayout Hint="usuarios" HeightRequest="80"  IsEnabled="{Binding IsEdit}" ContainerBackgroundColor="Transparent" 
                                                   Margin="10,0,0,0">
                            <Picker x:Name="usuarioEntry" TextColor="Black"  ItemDisplayBinding="{Binding FullName}" 
                                    Style="{StaticResource BorderlessEntryStyle}" Margin="15,0" 
                                SelectedItem="{Binding User}" ItemsSource="{Binding Usuarios}">
                            </Picker>
                        </inputLayout:SfTextInputLayout>
                    </Grid>
                </border:SfBorder>

                <border:SfBorder BackgroundColor="{DynamicResource Gray-White}"
                                 BorderColor="{Binding Source={x:Reference upaEntry}, Path=IsFocused, 
                                 Converter={StaticResource ColorConverter}, ConverterParameter=0}"
                                 CornerRadius="4" HeightRequest="80" Style="{StaticResource LoginFormBorderlessEntryBorderStyle}">
                    <Grid ColumnDefinitions="*, Auto">
                        <inputLayout:SfTextInputLayout Hint="Upas" HeightRequest="80" IsEnabled="{Binding IsEdit}" ContainerBackgroundColor="Transparent" 
                                                   Margin="10,0,0,0">
                            <Picker x:Name="upaEntry" TextColor="Black" ItemDisplayBinding="{Binding Nombre}"
                                    Style="{StaticResource BorderlessEntryStyle}" Margin="15,0" 
                                SelectedItem="{Binding Upa}" ItemsSource="{Binding Upas}">
                            </Picker>
                        </inputLayout:SfTextInputLayout>
                    </Grid>
                </border:SfBorder>
                <border:SfBorder Style="{StaticResource ThemeBorderStyle}">
                    <inputLayout:SfTextInputLayout Hint="Actividades" x:Name="InputComboBox" ContainerBackgroundColor="Transparent" 
                                                   Margin="10,0,0,0">
                        <combobox:SfComboBox EnableAutoSize="True" x:Name="comboBoxActividades" AllowFiltering="true" ComboBoxMode="SuggestAppend"
                                         DisplayMemberPath="Nombre" IsEditableMode="True" NoResultsFoundText="Actividad no encontrada." 
                                     DataSource="{Binding Actividades}"  >
                            <combobox:SfComboBox.Behaviors>
                                <prism:EventToCommandBehavior EventName="SelectionChanging"
                                          Command="{Binding ItemSelectCommand}" EventArgsParameterPath="Value" />
                            </combobox:SfComboBox.Behaviors>
                        </combobox:SfComboBox>
                    </inputLayout:SfTextInputLayout>
                </border:SfBorder>
                <cards:SfCardView Margin="20" Padding="15,0,15,0" IsVisible="{Binding IsVisibleActividades}" CornerRadius="30,30,30,30">
                    <StackLayout Spacing="20" VerticalOptions="Center" Padding="10"  IsVisible="{Binding IsVisibleActividades}">
                        <Label Text="Actividades agregadas"   IsVisible="{Binding IsVisibleActividades}" TextColor="{StaticResource PantoneVerdeSecond}"
                               FontSize="Medium"  FontAttributes="Bold"/>
                        <StackLayout>
                            <buttons:SfChipGroup x:Name="chipsActividades"
				            ItemsSource="{Binding ActividadesAdd}" 
				            ChipPadding="10,10,0,0" 
                            ChipBackgroundColor="{StaticResource PantoneAmarilloLight}"
                            ChipTextColor="Black"
                            ChipTextSize="Small"
                            CloseButtonColor="{StaticResource PantoneVerdeSecond}"
                       	    DisplayMemberPath="Nombre">
                                <buttons:SfChipGroup.Behaviors>
                                    <prism:EventToCommandBehavior EventName="ItemRemoved"
                                          Command="{Binding ItemRemoveCommand}" EventArgsParameterPath="RemovedItem" />
                                </buttons:SfChipGroup.Behaviors>

                                <buttons:SfChipGroup.ChipLayout>
                                    <FlexLayout 
                                        HorizontalOptions="Start"
						                Direction="RowReverse" 
						                Wrap="Wrap"
						                JustifyContent="Start"         
						                AlignContent="Start" 
						                AlignItems="Start"/>
                                </buttons:SfChipGroup.ChipLayout>
                            </buttons:SfChipGroup>
                        </StackLayout>
                    </StackLayout>
                </cards:SfCardView>
            </StackLayout>
        </ScrollView>
        <buttons:SfButton
            HorizontalOptions="FillAndExpand"
            VerticalOptions="EndAndExpand"
            Command="{Binding CreateOrEditCommand}"
             CornerRadius="8" Margin="15"
             Style="{StaticResource LestomaGradientButtonStyle}"
             Text="Guardar" />
    </StackLayout>
</ContentPage>